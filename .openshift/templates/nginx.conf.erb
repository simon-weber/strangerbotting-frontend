worker_processes  1;
pid run/nginx.pid;

error_log <%= ENV['OPENSHIFT_DIY_LOG_DIR']%>/nginx/error.log warn;

events {
    worker_connections  4096;
    use epoll;

    #multi_accept on;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    access_log off;
 
    open_file_cache max=100 inactive=180s; 
    open_file_cache_valid 60s; 
    open_file_cache_min_uses 2;
    open_file_cache_errors on;

    if_modified_since before;

    sendfile        on;
    tcp_nopush     on;

    # no keepalive
    keepalive_timeout  0 0;

    reset_timedout_connection on;
    client_body_timeout 10;
    send_timeout 10;

    # TODO: http://blog.killtheradio.net/technology/using-gzip_static-in-nginx-to-cache-gzip-files/
    gzip  off;

    server {
        listen       <%= ENV['OPENSHIFT_DIY_IP'] %>:<%= ENV['OPENSHIFT_DIY_PORT'] %>;
        server_name  localhost;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        location / {
            root   <%= ENV['OPENSHIFT_REPO_DIR'] %>static;
            index  index.html index.htm;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        #error_page   500 502 503 504  /50x.html;
        #location = /50x.html {
        #    root   html;
        #}

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443;
    #    server_name  localhost;

    #    ssl                  on;
    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_timeout  5m;

    #    ssl_protocols  SSLv2 SSLv3 TLSv1;
    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers   on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
